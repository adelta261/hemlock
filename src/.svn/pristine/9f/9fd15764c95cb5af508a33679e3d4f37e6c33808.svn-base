package hemlock;



//utilities

import java.util.Scanner;

public class Game {
	public static void main(String[] args) {
	
	//================================================================================
    // Initializing essential variables and elements || only performed once
    //================================================================================
		
		//GUI
		TextDemo.createAndShowGUI();
		
		//SYSTEM OBJECTS
		Scanner in = new Scanner(System.in); //Random rand = new Random();		
		
		//INITIALISING SCENE
		Scene gameProperties = new Scene();
		
		//INITIALISING LOCATION
		Location location = new Location();
		gameProperties.setLocation(location);
		
		//INITIALISING WINDOW
		Window window = new Window(); window.windowDefault();
		gameProperties.setSceneWindow(window);
		
		//INITIALISING DIALOGUE
		Dialogue dialogue = new Dialogue();
		gameProperties.setDialogue(dialogue);
		
		//INITIALISING PLAYER
		Player player = new Player();
		gameProperties.setScenePlayer(player);
		
		//MAIN MENU AND CHARACTER CREATION
		gameProperties = mainMenu(gameProperties, false);
				
		//INITIALISING GIRLS AND TEACHERS
		int numGirls = 100;
		int numTeachers = 20;
		if(gameProperties.getSceneGirls() == null) {
			Girl[] girls = new Girl[numGirls + numTeachers];
			for(int i = 0; i < girls.length; i++) {
				girls[i] = new Girl();
			}
			Girl.makeGirls(girls, numTeachers, gameProperties.getScenePlayer().getFurMode());
			gameProperties.setSceneGirls(girls);
		}
	
	//================================================================================
	// GAME LOOP
	//================================================================================
		
		//BOOLEANS FOR GAME (only run once)
		boolean running = true;  boolean playerDead = false;
		
		while(running) {		
			Dialogue.gameMenuText();
				while(playerDead == false) {
					if(player.getPlayerAlive() == false) {
						TextDemo.print("You are dead! Better luck next time.");
						playerDead = true;
					}
					//inputs
					Inputs.menuInputs(gameProperties);
				}
			Inputs.menuInputsDead(gameProperties);
			}
		}
	
	
	//================================================================================
	// Main Menu, called before game loop, but can be called any time
	//================================================================================
	
	public static Scene mainMenu(Scene scene, boolean playerCreated) {
		Scanner in = new Scanner(System.in);
		boolean mainMenu = true;
		while(mainMenu == true) {
			Dialogue.bannerText();
			Dialogue.mainMenuText(scene);
			while(mainMenu == true) {
				//String input = in.nextLine().toLowerCase();
				//String input = in.nextLine().toLowerCase();
				String input = in.nextLine();
				if(Inputs.mainMenuInputs(input) == 1) {
					mainMenu = false;
					break;
				} else if(Inputs.mainMenuInputs(input) == 2) {
					//TODO: LOADING
					//break;
				} else if(Inputs.mainMenuInputs(input) == 3) {
					System.exit(0);
					break;
				} else if(Inputs.mainMenuInputs(input) == 4) {				
					scene.getScenePlayer().createPlayer();
					scene.getScenePlayer().choosePreset("lucy");
					playerCreated = true;
					mainMenu = false;
					break;
				} else if(Inputs.mainMenuInputs(input) == 5) {
					Dialogue.credits();
				} else if(Inputs.mainMenuInputs(input) == 6 && scene.getSceneGirls() != null) {
					Dialogue.gameMenuText();
					return scene;
				}
			}				
		}
		scene.setScenePlayer(characterCreation(scene.getScenePlayer(), playerCreated));
		return scene;
	}
	
	//================================================================================
	// Character creation, called from main menu. New game
	//================================================================================
	
	public static Player characterCreation(Player player, boolean playerCreated) {
		Scanner in = new Scanner(System.in);
		while(playerCreated == false) {
			//run character creation
			player = CharacterCreation.createCharacter(player);
			while(playerCreated == false) {
				TextDemo.print("If you would like to create your character again, please enter (r)edo. \nIf you are happy with your character, type in the phrase (b)egin.");
				String input = in.nextLine().toLowerCase();
				if(input.equals("redo") || input.equals("r")) {
					//do nothing, let loop restart
				} else if (input.equals("begin") || input.equals("b")) {
					
					playerCreated = true;
					break;
				} else {
					TextDemo.print("\nPlease enter either 'redo' to create your character again, or 'begin' to begin the game. \n");
					input = in.nextLine();
				}
			}
		}
		return player;
	}
	
}
	
	
	



