package hemlock;

import java.util.ArrayList;

public class Scene {

	private int turnClock;
	private Girl player;
	private Girl[] girls;
	private Window window;
	private Dialogue dialogue;
	private boolean caught;
	private ArrayList<Girl> green = new ArrayList<Girl>();
	private ArrayList<Girl> girlsInScene = new ArrayList<Girl>();
	private int girlsEaten;
	private Location location;
	private boolean furMode;
	private boolean gainMode;
	
	
	//================================================================================
    // Scene Loop
    //================================================================================
	
		public static void scene(Scene scene) {
			resetScene(scene);
			boolean sceneInProgress = true;
			boolean girlsAlive = false;
			Functions.manipulateWindowTransition(scene, 1);
			while(sceneInProgress == true) {
				while(girlsAlive == false) {
					scene.setGirlsInScene(Functions.createGirlsInScene(scene, true));
					
					girlsAlive = true;
				}
				//if(scene.getGirlsInScene().isEmpty()) {
				//	girlsAlive = false;
				//}
				if(scene.getCaught()==false) {
					Inputs.sceneInputs(scene);	
				} else {
					if(scene.getScenePlayer().getGirlAlive() == false) {
						return;
					}
					Functions.daysInbetween(scene);
					Functions.daysPassed(scene);
					if(scene.getGainMode() == true) {
						Functions.gainWeight(scene);
					}
					Dialogue.afterActionReport(scene);
					Dialogue.gameMenuText();
					break;
				}
					
			}
		}
	
	//================================================================================
    // Construct scene / reset scene
    //================================================================================
	
		public static Scene constructScene(Girl player, Girl[] girls, Window window, Dialogue dialogue, Location location, Scene scene) {
			scene.turnClock = 0;
			scene.player = player;
			scene.girls = girls;
			scene.window = window;
			scene.dialogue = dialogue;
			scene.location = location;
			scene.girlsInScene = null;
			scene.caught = false;
			scene.girlsEaten = 0;
			return scene;
		}
		
		public static Scene resetScene(Scene scene) {
			scene.setCaught(false);
			scene.getSceneWindow().windowDefault();
			scene.setGirlsEaten(0);
			return scene;
		}
		
	//================================================================================
    // Scene setters
    //================================================================================
	
		//lists
		public void setFurMode(boolean furMode) {
			this.furMode = furMode;
		}
		
		public void setGainMode(boolean gainMode) {
			this.gainMode = gainMode;
		}
		
		public void setScenePlayer(Girl player) {
			this.player = player;
		}
		
		public void setSceneGirls(Girl[] girls) {
			this.girls = girls;
		}
				
		public void setGirlsInScene(ArrayList<Girl> girlsInScene) {
			this.girlsInScene = girlsInScene;
		}	
		
		public void setGreen(ArrayList<Girl> green) {
			this.green = green;
		}
		
		//game state
		public void setGirlsEaten(int girlsEaten) {
			this.girlsEaten = girlsEaten;
		}
		
		public void setCaught(boolean caught) {
			this.caught = caught;
		}
		
		//window
		public void setSceneTurnClock(int turns) {
			this.turnClock = turns;
		}
		
		public void setSceneWindow(Window window) {
			this.window = window;
		}
		
		//dialogue
		public void setDialogue(Dialogue dialogue) {
			this.dialogue = dialogue;
		}
		
		//location
		public void setLocation(Location location) {
			this.location = location;
		}
		
		
	//================================================================================
    // Scene getters
    //================================================================================
	
		//lists
		
		public boolean getFurMode() {
			return this.furMode;
		}
		
		public boolean getGainMode() {
			return this.gainMode;
		}
		
		public Girl getScenePlayer() {
			return this.player;
		}
		
		public Girl[] getSceneGirls() {
			return this.girls;
		}
		
		public ArrayList<Girl> getGirlsInScene(){
			return this.girlsInScene;
		}
		
		public ArrayList<Girl> getGreen(){
			return this.green;
		}
		
		//game state	
		public int getGirlsEaten() {
			return this.girlsEaten;
		}
		
		public boolean getCaught() {
			return this.caught;
		}
		
		//window
		public Window getSceneWindow() {
			return this.window;
		}
		
		public int getSceneTurnClock() {
			return this.turnClock;
		}
		
		//dialogue
		public Dialogue getDialogue() {
			return this.dialogue;
		}
		
		//location
		public Location getLocation() {
			return this.location;
		}
}
